0.7-10	2023-11-28
   o	silence overzealous C warnings


0.7-9	2022-11-28
   o	suppress OpenSSL warnings, more conservative PROTECTs


0.7-8	2022-03-08
   o	support Windows UCRT


0.7-7	2021-11-05
   o	improve long vector support and get ready for R-devel


0.7-6	2021-10-31
   o	remove configure.win and rely on OpenSSL being part
	of the toolchain


0.7-5	2021-09-12
   o	support long vectors when encoding (needed for R 3.5.0+)

   o	retry SSL/TLS read and write operations when required (#5)

   o	add `verify` flag to RS.connect() to verify the server
	certificate when connecting using SSL. (#3)

	Important: note that the default has now changed to
	`verify=TRUE', such that the default is to check the server
	certificate and fail in case it is not valid. To restore
	the old bahavior use `verify=FALSE'.

   o	add `ca` argument to RS.connect() and RS.switch() to
	supply any CA chain needed to verify the server certificate.
	Only useful in conjunction with `verify=TRUE`.

   o	it is now possible to supply a client certificate using
	`chain` (for client certificate and its chain) and `key`
	(for the client key) in RS.connect() and RS.switch().
	This allows client authentication in Rserve based on the
	client certificate.

   o	use NAMESPACE for C symbol registration


0.7-4	2017-10-06
   o	support RS.collect(..., qap=TRUE)


0.7-3	2015-07-27
   o	fix an error when handling OOB if no handlers are registered

   o	RS.oobCallbacks(c) would always return NULL callabcks


0.7-2	2013-07-02
   o	add RS.eval(..., lazy=FALSE) which evaluates the argument
	locally and then remotely. This allows the construction of
	remote calls with both remote and local symbols.

   o	add RS.eval.qap() which uses Rserve QAP encoding instead of
	native R serialization (requires Rserve 1.7-0 with DT_SEXP
	support in CMD_eval).

   o	add support for Rserve object-capability (OC) model mode.
	OC calls are issued using RS.eval.qap() with OCref
	as the function to call.

   o	switch the order of winsock2.h and windows.h


0.7-1	2013-02-19
   o	add support for asynchronous connections and OOB streaming

   o	add support for non-transparent proxy protocol (RSpx)

   o	allow queuing of asynchronous RS.eval() and RS.assign()

   o	add basic methods for connections such as print, == and !=

   o	allow convenient RS.assign(c, x) syntax


0.7-0	2012-11-05
   o	initial CRAN release - the R client is based on Rserve 0.6-8
	The function names on this old client are in the form RSxxx()

	Included is a new C-based client which uses sockets directly
	and thus supports features that cannot be supported with an
 	R-based client such as TLS/SSL connections, switching,
	RSA secure authentication, multi-client selection.
	The function names for the new client are of the form RS.xxx()

	Handles of the two clients are not interchangeable, so you can
	only use one or the other for one connection.
